@startuml
/'
注释内容
    participant
    actor
    boundary
    control
    entity
    database

    关键字不同
    participant par
    actor act
    boundary bou
    control con
    entity ent
    database dat

    par->act : to actor
    par->bou : to  boundary
    par->con : to control
    par->ent : to entity
    par->dat : to database

    participant "我是很长的一段话，如果要用我来表达的话，就太长了吧！" as par
    actor act #FF0000
    boundary bou #00FF00
    control con #0000FF
    entity ent #FFFF00
    database dat #00FFFF

双引号引用 as 关键字
    张三 -> "Tom()" : Hello
    "Tom()" -> "牛儿还在山上吃草，放牛的却不知道哪里去了的王二小" as wang : Hi
    wang --> "Tom()" : How are you

    张三 -> "Tom()" : Hello
    "Tom()" -> "牛儿还在山上吃草，放牛的却不知道哪里去了的王二小" as wang : Hi
    wang --> "Tom()" : How are you
    wang -> wang : 我要把鬼子引到埋伏圈去！\n 让八路军把这些鬼子都干掉~

时序图的箭头除了常用的->以外，还可以指定不同类型的箭头。它们分别是：

    箭头末端为一把叉。表示消息丢失。
    使用\或者/来代替<和>,可以得到只有上半部或者下半部的箭头。
    使用两个箭头符号（\\、//或者>>、<<），使箭头变为细线箭头。
    使用--代替-，可以变为虚线箭头。
    在箭头末尾增加一个o，可以在箭头末尾增加一个O。
    可以使用双向箭头。

    颜色
        树木 -[#green]> 树林
        树林 -[#00FF00]> 森林
        树林 <[#red]-- 森林
        树木 <[#FF0000]-- 树林
    阴 -> 阳
    阴 --> 阳
    阴 ->x 阳
    阴 ->> 阳
    阴 -\ 阳
    阴 -\\ 阳
    阴 /-- 阳
    阴 //-- 阳
    阴 ->o 阳
    阴 <-> 阳
    阴 <-->o 阳
    阴 o<-->x 阳



autonumber  添加序号

        张三 -> 李四 : 我要借钱
        李四 --> 张三 : 借给你
        张三 -> 李四 : 我要还钱
        李四 --> 张三 : 收到欠款

        autonumber
        张三 -> 李四 : 我要借钱
        李四 --> 张三 : 借给你

        autonumber 12
        张三 -> 李四 : 我要还钱
        李四 --> 张三 : 收到欠款

        autonumber 20 5
        张三 -> 李四 : 我还要借钱
        李四 --> 张三 : 不借了


        autonumber "<b>[000]"
        张三 -> 李四 : 我要借钱
        李四 --> 张三 : 借给你

        autonumber 12 "<b>(<u>###</u>)"
        张三 -> 李四 : 我要还钱
        李四 --> 张三 : 收到欠款

        autonumber 20 5 "<font color=red>MSG #"
        张三 -> 李四 : 我还要借钱
        李四 --> 张三 : 不借了


title 借钱与还钱的故事

张三 -> 李四 : 我要借钱
李四 --> 张三 : 借给你



    legend center
    这是一个借钱与还钱发生的故事。
    故事发生在一个夜黑风高的晚上……
    endlegend

    张三 -> 李四 : 我要借钱
    李四 --> 张三 : 借给你



张三 -> 李四 : 我要借钱
李四 --> 张三 : 借给你
newpage
张三 -> 李四 : 我要还钱
李四 --> 张三 : 收到欠款

newpage 最后的标题
张三 -> 李四 : 我还要借钱
李四 --> 张三 : 不借了


可以使用一下关键字对消息进行分组：

    alt/else
    opt
    loop
    par
    break
    critical
    group (后接需要显示的字符)

        alt 借钱案例
        张三 -> 李四 : 我要借钱

        loop 循环借钱100次
        group 成功案例
        李四 --> 张三 : 借给你
        end

        张三 -> 李四 : 我要还钱
        李四 --> 张三 : 收到欠款
        end

        else 借钱失败
        张三 -> 李四 : 我还要借钱
        李四 --> 张三 : 不借了

    消息注释
    张三 -> 李四 : 我要借钱
    note left: 我借钱肯定会还你的！

    李四 --> 张三 : 借给你
    note right: 我相信你肯定会还我钱的！

    张三 -> 李四 : 我要还钱
    note left
    有借有还，
    再借不难！
    end note

    李四 --> 张三 : 收到欠款
    note right: 有诚信！

    张三 -> 李四 : 我还要借钱
    李四 --> 张三 : 不借了


participant 张三
participant 李四

note left of 张三 #00FF00
我的名字叫张三，
家里有房又有田。
谁知来了个李四，
从此生活大变样。
end note

note right of 李四: 我是李四大哥

note over 张三: 谁敢比我惨~~~

note over 李四: 我比你更惨~~~

note over 张三,李四 #red
左手一只鸡，
右手一只鸭，
不得禽流感算我瞎！
end note

end



Creole和HTML格式

首先，可以使用Creole定义文本格式。它包括：

    **黑体**
    //斜体//
    ""等宽字体""
    --删除线--
    __下划线__
    ~~ 波浪线~~

除此外，在note中还可以使用一些html标签：

    <back:red></back> 背景色
    <size:18></size> 字体大小
    <u:red></u> 下划线
    <color red></color> 字体颜色
    <s:red></strike> 删除线
    <w:FF33FF></w> 波浪线
    <img source.jpg> 图片


分割线是需要使用==关键字

延时添加文字说明。需要使用的关键字为...

|||关键字可以为上下两条内容多分隔出一定空间。另外，还可以使用||45||来指定分隔空间的具体像素

activate和deactivate关键字用来指明参与者对象的活跃周期。
当一个参与者对象被激活，则表示它的活跃周期开始，
生命线变为长方形。activate和deactivate关键词用在触发激活的消息之后

create关键字来动态创建参与者对象

[和]配合箭头来表示进出消息

box和end box组合来将参与者对象放到一起

skinparam backfroundColor #EEEBDC
skinparam handwritten true

skinparam sequence {

    ArrowColor DeepSkyBlue
    ActorBorderColor blue
    LifeLineBorderColor blue
    LifeLineBackgroundColor #A9DCDF

    ParticipantBorderColor DeepSkyBlue
    ParticipantBackgroundColor DodgerBlue
    ParticipantFontName Aapex
    ParticipantFontColor #A9DCDF

    ActorBackgroundColor aqua
    ActorFontColor DeepSkyBlue
    ActorFontSize 17
    ActorFontName Aapex
}

张三 -> 李四 : 我要借钱
activate 张三
activate 李四

李四 -> 李四 : 四处筹钱
activate 李四 #FFBBBB

李四 -> 王五 : 你给他担保我才借
activate 王五

王五 --> 李四 : 我给他担保
destroy 王五

deactivate 李四

李四 --> 张三 : 借给你

张三 -> 李四 : 我要还钱
李四 --> 张三 : 收到欠款
deactivate 李四

张三 -> 李四 : 我还要借钱
李四 --> 张三 : 不借了
deactivate 张三
'/


start
if (condition A) then (yes)
  :Text 1;
elseif (condition B) then (yes)
  :Text 2;
  stop
elseif (condition C) then (yes)
  :Text 3;
elseif (condition D) then (yes)
  :Text 4;
else (nothing)
  :Text else;
endif
stop


/'
注释内容
'/
start
if (Graphviz installed?) then (yes)
  :process all\ndiagrams;
else (no)
  :process only
  __sequence__ and __activity__ diagrams;
endif
stop


start
:Hello world;
:This is on defined on
several **lines**;
end



start
repeat
  :read data;
  :generate diagrams;
repeat while (more data?)
stop



start
while (data available?)
  :read data;
  :generate diagrams;
endwhile
stop



while (check filesize ?) is (not empty)
  :read file;
endwhile (empty)
:close file;



start
if (multiprocessor?) then (yes)
  fork
    :Treatment 1;
  fork again
    :Treatment 2;
  end fork
else (monoproc)
  :Treatment 1;
  :Treatment 2;
endif



start
:ClickServlet.handleRequest();
:new page;
if (Page.onSecurityCheck) then (true)
  :Page.onInit();
  if (isForward?) then (no)
    :Process controls;
    if (continue processing?) then (no)
      stop
    endif

    if (isPost?) then (yes)
      :Page.onPost();
    else (no)
      :Page.onGet();
    endif
    :Page.onRender();
  endif
else (false)
endif

if (do redirect?) then (yes)
  :redirect process;
else
  if (do forward?) then (yes)
    :Forward request;
  else (no)
    :Render page template;
  endif
endif
stop



@enduml